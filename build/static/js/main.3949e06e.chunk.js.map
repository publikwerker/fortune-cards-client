{"version":3,"sources":["actions/index.js","config.js","actions/utils.js","local-storage.js","actions/protected.js","validators.js","components/register.js","components/login.js","components/query.js","components/ErrorBoundary.js","components/memberButton.js","components/header.js","components/historyForm.js","components/card.js","components/cardPopUp.js","components/spread.js","components/clearButton.js","components/readingHistory.js","components/footer.js","components/Info.js","App.js","reducers/index.js","reducers/auth.js","components/store.js","serviceWorker.js","index.js"],"names":["reset","type","toggle_signin","API_BASE_URL","process","normalizeResponseErrors","res","ok","headers","has","get","startsWith","json","then","err","Promise","reject","code","status","message","statusText","saveAuthToken","authToken","localStorage","setItem","e","clearAuthToken","removeItem","SET_AUTH_TOKEN","setAuthToken","CLEAR_AUTH","clearAuth","AUTH_REQUEST","authRequest","AUTH_SUCCESS","authSuccess","currentUser","AUTH_ERROR","FETCH_HISTORY_REQUEST","FETCH_HISTORY_SUCCESS","fetchHistorySuccess","history","FETCH_HISTORY_ERROR","SAVE_HISTORY_REQUEST","SAVE_HISTORY_SUCCESS","saveHistorySuccess","SAVE_HISTORY_ERROR","storeAuthInfo","dispatch","console","log","decodedToken","jwtDecode","user","username","userHistory","storeAuthInfo2","data","token","CreateUser","password","fetch","concat","method","Content-Type","body","JSON","stringify","catch","SubmissionError","_error","Login","error","fetchHistory","required","value","undefined","nonEmpty","trim","isTrimmed","Register","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","_this$props","props","handleSubmit","errorBlock","react_default","a","createElement","className","onSubmit","Field","component","name","label","validators","disabled","pristine","submitting","React","Component","registerForm","reduxForm","form","_onSubmit","asyncToGenerator","regenerator_default","mark","_callee","values","response","wrap","_context","prev","next","sent","stop","_x","_x2","onSubmitFail","errors","focus","connect","state","login","tarot","LoginWindow","signIn","register","id","onClick","loginForm","auth","Query","cardsDealt","length","textQuery","placeholder","autocomplete","min","max","spreadNumber","queryForm","trim_deck","deck","ErrorBoundary","_this","call","hasError","errorInfo","setState","style","whiteSpace","toString","componentStack","children","MemberButton","_getPrototypeOf2","_len","args","Array","_key","handleLogout","_this2","href","Header","memberButton","searchTerm","HistoryForm","params","aria-live","saveHistoryRequest","getState","comments","query","mode","authorization","_ref2","addReadingToHistory","CardDescriptions","facingText","facing","desc","CardImages","classes","src","img","alt","CardPopUp","handleClick","expanded","card","display","Spread","theHeading","historyParams","cardImages","map","index","cardPopUp_CardPopUp","historyForm_HistoryForm","slice","ClearButton","resetButton","ReadingHistory","readingHistory","reading","createdAt","Footer","Info","showInfo","App","_Component","loadDeck","header","ErrorBoundary_ErrorBoundary","components_Info","components_query","clearButton","spread","shuffle","require","initialState","loading","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","formReducer","action","assign","newDeck","Math","floor","random","toConsumableArray","shuffledDeck","signin","createStore","applyMiddleware","thunk","Boolean","location","hostname","match","ReactDOM","render","es","store","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3949e06e.chunk.js","sourcesContent":["export const MAKE_SEARCH = 'MAKE_SEARCH';\nexport const make_search = (searchTerm) => ({\n  type: MAKE_SEARCH,\n  searchTerm\n});\n\nexport const OPEN_HISTORY = 'OPEN_HISTORY';\nexport const open_history = () => ({\n  type: OPEN_HISTORY\n});\n\nexport const RESET = 'RESET';\nexport const reset = () =>({\n  type: RESET,\n});\n\nexport const SET_DECK = 'SET_DECK';\nexport const set_deck = (deck) => ({\n  type: SET_DECK,\n  deck\n});\n\nexport const SHUFFLE_DECK = 'SHUFFLE_DECK';\nexport const shuffle_deck = () => ({\n  type: SHUFFLE_DECK,\n});\n\nexport const TAKE_QUERY = 'TAKE_QUERY';\nexport const take_query = (textQuery) => ({\n  type: TAKE_QUERY,\n  textQuery\n});\n\nexport const TOGGLE_LOGIN ='TOGGLE_LOGIN';\nexport const toggle_login = () => ({\n  type: TOGGLE_LOGIN\n});\n\nexport const TOGGLE_INFO ='TOGGLE_INFO';\nexport const toggle_info = () => ({\n  type: TOGGLE_INFO\n});\n\nexport const TOGGLE_SIGNIN = 'TOGGLE_SIGNIN';\nexport const toggle_signin = () => ({\n  type: TOGGLE_SIGNIN,\n});\n\nexport const TRIM_DECK = 'TRIM_DECK';\nexport const trim_deck = (values)  => ({\n  type:  TRIM_DECK,\n  values\n});","export const API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n//export const API_BASE_URL = 'http://localhost:8000';","export const normalizeResponseErrors = res => {\n  if (!res.ok) {\n    if (\n      res.headers.has('content-type') &&\n      res.headers.get('content-type').startsWith('application/json')\n    ){\n      return res.json().then(err=>Promise.reject(err));\n    }\n    return Promise.reject({\n      code: res.status,\n      message: res.statusText\n    });\n  }\n  return res;\n};","export const loadAuthToken = () => {\n  return localStorage.getItem('authToken');\n};\n\nexport const saveAuthToken = authToken => {\n  try {\n      localStorage.setItem('authToken', authToken);\n  } catch (e) {}\n};\n\nexport const clearAuthToken = () => {\n  try {\n      localStorage.removeItem('authToken');\n  } catch (e) {}\n};","import { API_BASE_URL } from '../config.js';\n\nimport jwtDecode from 'jwt-decode';\n\nimport { SubmissionError } from 'redux-form';\nimport { normalizeResponseErrors } from './utils';\n\nimport { saveAuthToken, clearAuthToken } from '../local-storage';\nimport { toggle_login  } from './index.js';\n\nexport const SET_AUTH_TOKEN = 'SET_AUTH_TOKEN';\nexport const setAuthToken = authToken => ({\n    type: SET_AUTH_TOKEN,\n    authToken\n});\n\nexport const CLEAR_AUTH = 'CLEAR_AUTH';\nexport const clearAuth = () => ({\n    type: CLEAR_AUTH\n});\n\nexport const AUTH_REQUEST = 'AUTH_REQUEST';\nexport const authRequest = () => ({\n    type: AUTH_REQUEST\n});\n\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const authSuccess = currentUser => ({\n    type: AUTH_SUCCESS,\n    currentUser\n});\n\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const authError = error => ({\n    type: AUTH_ERROR,\n    error\n});\n\nexport const FETCH_HISTORY_REQUEST = 'FETCH_HISTORY';\nexport const fetchHistoryRequest = () => ({\n  type: FETCH_HISTORY_REQUEST,\n});\n\nexport const FETCH_HISTORY_SUCCESS = 'FETCH_HISTORY_SUCCESS';\nexport const fetchHistorySuccess = history => ({\n  type: FETCH_HISTORY_SUCCESS,\n  history\n});\n\nexport const FETCH_HISTORY_ERROR = 'FETCH_HISTORY_ERROR';\nexport const fetchHistoryError = error => ({\n  type: FETCH_HISTORY_ERROR,\n  error\n});\n\nexport const SAVE_HISTORY_REQUEST = 'SAVE_HISTORY_REQUEST';\nexport const saveHistoryRequest = (values) => ({\n  type: SAVE_HISTORY_REQUEST,\n  values\n});\n\nexport const SAVE_HISTORY_SUCCESS = 'SAVE_HISTORY_SUCCESS';\nexport const saveHistorySuccess = () => ({\n  type: SAVE_HISTORY_SUCCESS,\n});\n\nexport const SAVE_HISTORY_ERROR = 'SAVE_HISTORY_ERROR';\nexport const saveHistoryError = error => ({\n  type: SAVE_HISTORY_ERROR,\n  error\n});\n\n// Stores the auth token in state and localStorage, and decodes and stores\n// the user data stored in the token\nexport const storeAuthInfo = (authToken, dispatch) => {\n  console.log(authToken)\n  const decodedToken = jwtDecode(authToken);\n  console.log(decodedToken)\n  const currentUser = (decodedToken.user.username);\n  const userHistory = (decodedToken.user.history);\n  dispatch(setAuthToken(authToken));\n  dispatch(authSuccess(currentUser));\n  dispatch(fetchHistorySuccess(userHistory));\n  saveAuthToken(authToken);\n};\n\n// Stores the auth token in state and localStorage, and decodes and stores\n// the user data stored in the token usingnew db.js\nexport const storeAuthInfo2 = (data, dispatch) => {\n  console.log(data);\n  console.log(data.user.history);\n  console.log(data.user.username);\n  dispatch(setAuthToken(data.token));\n  dispatch(authSuccess(data.user.username));\n  dispatch(fetchHistorySuccess(data.user.history));\n  saveAuthToken(data.token);\n};\n\n// create new user from register component\nexport const CreateUser = (username, password) => (dispatch) => {\n  dispatch(authRequest());\n  return (\n    fetch(`${API_BASE_URL}/users`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    })\n  )\n  .then(res => normalizeResponseErrors(res))\n  .then(res => res.json())\n  .then(res => {\n    dispatch(toggle_login());\n    storeAuthInfo2(res, dispatch)\n  })\n  .catch(err => {\n    const { code, message } = err;\n    return Promise.reject(\n      new SubmissionError({\n        _error: {code, message}\n      })\n    );\n  })\n  \n};\n\nexport const Login = (username, password) => dispatch => {\n  dispatch(authRequest());\n  return (\n    fetch(`${API_BASE_URL}/users/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    })\n    .then(res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .then((res) => {\n      dispatch(toggle_login());\n      storeAuthInfo2(res, dispatch)\n    })\n    .catch(err => {\n      const { code } = err;\n      const message =\n        (code === 401)\n          ? 'Incorrect username or password'\n          : 'Unable to login, please try again';\n      dispatch(authError(err));\n      return new SubmissionError({\n          error: {code, message}\n        });\n    })\n  );\n};\n\nexport const refreshAuthToken = () => (dispatch, getState) => {\n  const authToken = getState().auth.authToken;\n  return fetch(`${API_BASE_URL}/auth/refresh`, {\n    method: 'POST',\n    headers: {\n      authorization: `Bearer ${authToken}`,\n      'Content-Type': 'application/json'\n    }\n  })\n  .then(res => normalizeResponseErrors(res))\n  .then(res => res.json())\n  .then(({authToken}) => storeAuthInfo(authToken, dispatch))\n  .catch(err => {\n    clearAuthToken(authToken);\n  });\n};\n\nexport const addReadingToHistory = (values) => (dispatch, getState) => {\n  const username = getState().auth.currentUser;\n  const authToken = getState().auth.authToken;\n  const cardsDealt = getState().tarot.cardsDealt;\n  const comments = values.comments; \n  const query = getState().tarot.textQuery;\n\n  return fetch(`${API_BASE_URL}/auth`, {\n    mode: 'no-cors',\n    method: 'PUT',\n    headers: {\n      authorization: `Bearer ${authToken}`,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username:username,\n      comments:comments,\n      query: query,\n      cardsDealt: cardsDealt,\n    })\n  })\n  .then(res => normalizeResponseErrors(res))\n  .then(res => res.json())\n  .then(({authToken}) => storeAuthInfo(authToken, dispatch))\n  .then(() => dispatch(saveHistorySuccess()))\n  .then(() => dispatch(fetchHistory(username))) \n  .catch(err => {\n    clearAuthToken(authToken);\n  });\n};\n\nexport const fetchHistory = username => dispatch => {\n  dispatch(fetchHistoryRequest());\n  return fetch(`${API_BASE_URL}/auth/?id=${username}/`)\n    .then( res => {\n      if (!res.ok) {\n        return Promise.reject('Something went wrong');\n      }\n      return res.json();\n    })\n    .then(history => \n      dispatch(fetchHistorySuccess(history)))\n    .catch(err => {\n      const { code, message } = err;\n      return Promise.reject(\n        new SubmissionError({\n          _error: {code, message}\n        })\n      );\n    })\n};","\nexport const required = value => (value ? undefined : 'Required');\nexport const nonEmpty = value =>\n    value.trim() !== '' ? undefined : 'Cannot be empty';\nexport const isTrimmed = value =>\n    value.trim() === value ? undefined : 'Cannot start or end with whitespace';\nexport const length = length => value => {\n    if (length.min && value.length < length.min) {\n        return `Must be at least ${length.min} characters long`;\n    }\n    if (length.max && value.length > length.max) {\n        return `Must be at most ${length.max} characters long`;\n    }\n};\nexport const matches = field => (value, allValues) =>\n    field in allValues && value.trim() === allValues[field].trim()\n        ? undefined\n        : 'Does not match';","import React from 'react';\nimport { connect } from 'react-redux';\nimport {Field, reduxForm, focus } from 'redux-form';\nimport { toggle_login } from '../actions/index.js';\nimport { CreateUser, storeAuthInfo2 } from '../actions/protected.js';\n\nimport { required, nonEmpty } from '../validators';\n\nexport class Register extends React.Component{\n  render(){\n    const {handleSubmit, error }=this.props;\n    let errorBlock = <p className='empty-div'></p>;\n    if (error){\n      errorBlock = <p className='error-text'>{`Error: ${error.message}`}</p>\n    }\n    return (\n      <div className=\"register-container\">\n            <form className=\"form-container\"  \n              onSubmit={handleSubmit}>\n              {errorBlock}\n            <label className=\"label\">User Name</label>\n            <Field component=\"input\"\n              name=\"username\"\n              label=\"username\"\n              type=\"text\"\n              className=\"username\"\n              validators={[required, nonEmpty]}\n            /><br />\n            <label className=\"label\">Password</label>\n            <Field component=\"input\"\n              name=\"password\"\n              type=\"password\"\n              className=\"password\"\n              validators={[required, nonEmpty]}\n            /><br />\n            <button name=\"signup-button\"\n              type=\"submit\"\n              className=\"signup-button\"\n              disabled={this.props.pristine || this.props.submitting}\n            >Join</button>\n            </form>\n          </div>\n    );\n  };\n};\n\nconst registerForm = reduxForm({\n  form: 'register',\n  onSubmit: async (values, dispatch) => {\n    const response = await dispatch(CreateUser(values.username, values.password));\n    await dispatch(storeAuthInfo2(response))\n    await dispatch(toggle_login());\n  },\n  onSubmitFail: (errors, dispatch) => dispatch(focus('login', 'username'))\n})(Register);\n\nfunction mapStateToProps(state){\n  return {\n    login: state.tarot.login,\n  };\n}\n\nexport default connect(mapStateToProps)(registerForm);","import React from 'react';\nimport { connect } from 'react-redux';\nimport{ Field, reduxForm } from 'redux-form';\nimport { toggle_signin } from '../actions/index.js';\nimport { Login } from '../actions/protected.js';\nimport  Register  from './register.js';\n\nimport { required, nonEmpty, isTrimmed } from '../validators';\n\nexport class LoginWindow extends React.Component {\n  render() {\n    const { dispatch, handleSubmit, error } = this.props;\n    let errorBlock = <p className='empty-div'></p>;\n    if (error){\n      errorBlock = <p className='error-text'>{`Error: ${error.message}`}</p>\n    }\n    function signUp(){\n      dispatch(toggle_signin());\n    }\n    if (this.props.login === true){\n      if (this.props.signIn === true){\n        return (\n          <Register />\n        );\n      } else {\n        return (\n        <div className=\"login-container\">\n          <form \n            className=\"form-container\"  \n            onSubmit={handleSubmit}>\n          {errorBlock}\n          <button \n            name=\"newuser-button\"\n            id=\"newuser-button\"\n            type=\"button\"\n            className=\"newuser-button\"\n            onClick={signUp}\n          >Register</button>\n          <label className=\"label\">User Name</label>\n          <Field component=\"input\"\n            name=\"username\"\n            label=\"username\"\n            type=\"text\"\n            className=\"username\"\n            validators={[required, nonEmpty, isTrimmed]}\n          /><br />\n          <label className=\"label\">Password</label>\n          <Field component=\"input\"\n            name=\"password\"\n            type=\"password\"\n            className=\"password\"\n            validators={[required, nonEmpty, isTrimmed]}\n          /><br />\n          <button \n            name=\"login-button\"\n            id=\"login-button\"\n            type=\"submit\"\n            className=\"login-button\"\n            disabled={this.props.pristine || this.props.submitting}\n          >Sign In</button>\n          </form>\n        </div>\n        );\n      }\n    } else return (<div className=\"empty-div\"></div>);\n  }\n}\n\nconst loginForm  = reduxForm({\n  form: 'login',\n  onSubmit: (values, dispatch) => {\n    dispatch(Login(values.username, values.password));\n  }\n})(LoginWindow);\n\nfunction mapStatetoProps(state){\n  console.log(state)\n  return {\n    error: state.auth.error,\n    login: state.tarot.login,\n    signIn: state.tarot.signIn\n  };\n}\n\nexport default connect(mapStatetoProps)(loginForm);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport {  shuffle_deck, trim_deck, take_query }  from '../actions/index.js';\n\nexport class Query extends React.Component {\n  render () {\n    if (this.props.login !== true && this.props.cardsDealt.length>0){\n      return (\n        <section className=\"query-container\">\n          <h3>Your query:</h3>\n          <p className=\"display-query\">{this.props.textQuery}</p>\n        </section>\n      )\n    } else \n    if (this.props.login !== true){\n      const { handleSubmit } = this.props;\n      return (\n        <section className=\"query-container\">\n          <form onSubmit={ handleSubmit }>\n          <Field component=\"input\"\n            name=\"textQuery\"\n            className=\"text-query\"\n            type=\"text\"\n            placeholder=\"Ask a question.\"\n            value={this.props.textQuery}\n            autocomplete=\"off\"\n          />\n          <label className=\"spreadNumber-label\">number of cards to deal: </label>\n          <Field component=\"input\" \n            name=\"spreadNumber\" \n            className=\"spread-number\" \n            type=\"number\" \n            placeholder=\"all\"\n            min={1} max={78}\n            value={this.props.spreadNumber}\n            autocomplete=\"off\"\n          /><br />\n            <button \n              name=\"deal-button\" \n              id=\"deal-button\"\n              type=\"submit\"  className=\"deal-button\">Deal</button>\n          </form>\n        </section>\n      );\n    } else {\n      return (<div></div>);\n    }\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    login: state.tarot.login,\n    deck: state.tarot.deck,\n    cardsDealt: state.tarot.cardsDealt,\n    textQuery: state.tarot.textQuery,\n    spreadNumber: state.tarot.spreadNumber\n  };\n}\n\nconst queryForm = reduxForm({\n  form: 'query',\n  onSubmit: (values, dispatch) => { \n    dispatch(trim_deck(values.spreadNumber));\n    dispatch(take_query(values.textQuery));\n    dispatch(shuffle_deck());\n  }\n})(Query);\n\nexport default connect(mapStateToProps)(queryForm);","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false, error: null, errorInfo: null };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true,\n    error: error };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      hasError: true,\n      error: error,\n      errorInfo: errorInfo\n    })\n  }\n\n  render() {\n    if (this.state.hasError) {\n       // Error path\n       return (\n        <div>\n          <h2>Something went wrong.</h2>\n          <details style={{ whiteSpace: 'pre-wrap' }}>\n            {this.state.error && this.state.error.toString()}\n            <br />\n            {this.state.errorInfo.componentStack}\n          </details>\n        </div>\n      );\n    }\n    // Normally, just render children\n    return this.props.children;\n  }  \n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { toggle_login, open_history } from '../actions/index.js';\nimport { clearAuth } from '../actions/protected';\nimport { reset } from '../actions/index';\n\nexport class MemberButton extends React.Component {\n\n  handleLogout = () => {\n      this.props.dispatch(clearAuth());\n      this.props.dispatch(reset())\n  }\n  render (){\n    if (this.props.currentUser){\n      return (<div className=\"user-links\">\n          <button\n            className=\"header-link\"\n            id=\"custom-button\"\n            href=\"#\" \n            onClick={(e)=>this.props.dispatch(open_history())}>{this.props.currentUser}</button>\n          <button\n            className=\"header-link\"\n            id=\"logout-button\"\n            href=\"#\" \n            onClick={(e)=>this.handleLogout(e)}>logout</button>\n        </div>\n      )\n    } else {\n      return(\n        <button\n          className=\"header-link\"\n          id=\"member-login-button\"\n          href=\"#\" \n          onClick={(e)=>this.props.dispatch(toggle_login())}>Member Login</button>\n      );\n    }\n  }\n} \n\nfunction mapStateToProps(state){\n  return {\n    currentUser: state.auth.currentUser,\n  };\n};\n\nexport default connect(mapStateToProps)(MemberButton);","import React from 'react';\nimport { reduxForm } from 'redux-form';\nimport MemberButton from './memberButton.js';\nimport { make_search } from '../actions/index.js';\n\nexport class Header extends React.Component {\n  render() {\n    const { handleSubmit } = this.props;\n    return (\n      <div className=\"header-container\">\n        <header className=\"App-header\">\n          <nav>\n            <a className=\"header-link purchase-link\"\n              href=\"https://www.publikwerks.com/thelema-tarot-deck/tarot-deck-pre-order\">Purchase Deck</a>\n            <MemberButton />\n          </nav>\n          <form className=\"searchBar\" onSubmit={handleSubmit}>\n            {/* <Field component=\"input\" \n              type=\"text\" \n              name=\"searchTerm\"\n              className=\"search-field\"\n            /><br />\n            <button \n              name=\"search\"\n              id=\"search-button\"\n              type=\"submit\"\n              className=\"search-button\"\n              disabled={this.props.pristine || this.props.submitting}>Search</button> */}\n          </form>\n          <h1 className=\"banner\">FORTUNE CARDS</h1>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default reduxForm({\n  form: 'search',\n  onSubmit: (values, dispatch) => {\n    dispatch(make_search(values.searchTerm));\n  }\n})(Header)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { saveHistorySuccess, saveHistoryRequest, addReadingToHistory } from '../actions/protected.js';\n\nexport class HistoryForm extends React.Component {\n  currentUser = this.props.currentUser;\n  render(){\n    let currentUser = this.props.params.currentUser;\n    let cardsDealt = this.props.params.cardsDealt;\n    let error; \n    if (this.props.error) {\n      error = (\n        <div className=\"form-error\" aria-live=\"polite\">\n          {this.props.error}\n          </div>\n      );\n    }\n    let historyForm=<div className=\"empty-div\"></div>;\n    const { handleSubmit }=this.props;\n    //display the comment and save form\n    if (cardsDealt.length){\n      if (currentUser === null){\n        historyForm =<div className=\"login-prompt\">\n        <h3>Sign in to save your readings!</h3>\n      </div>\n      } else {\n        historyForm =<div className=\"history-form-container\">\n          <form\n            className=\"history-form\" \n            onSubmit= { handleSubmit }>\n            {error}\n            <label>Comments:</label>\n            <Field component=\"input\"\n              name=\"comments\"\n              type=\"text\"\n              className=\"comments\"\n              placeholder=\"We'll see...\"\n              autocomplete=\"off\"\n            />\n            <button\n                name=\"saveHistory\"\n                className=\"save-history\"\n                id=\"save-history\"\n                type=\"submit\"\n              >Save</button>\n            </form>\n          </div>\n        }\n      } else {\n        return <div></div>\n      }\n  return historyForm;\n  }\n}\n\nHistoryForm  = reduxForm({\n  form: 'save',\n  onSubmit: (values, dispatch) => { \n    dispatch(saveHistoryRequest());\n    dispatch(addReadingToHistory(values))\n    .then(dispatch(saveHistorySuccess()));\n  }\n})(HistoryForm);\n\nexport default connect()(HistoryForm);","import React from 'react';\n\nexport function CardDescriptions(props) {\n  let facingText = '';\n  if (props.facing >= 0){\n    switch (props.facing) {\n      case 0:\n        facingText = 'Facing upward.';\n        break;\n      case 1:\n        facingText = 'Facing to the right.';\n        break;\n      case 2:\n        facingText = 'Facing downward.';\n        break;\n      case 3:\n        facingText = 'Facing to the left.';\n        break;\n      default:\n        break;\n    }\n  }\n  return (\n    <div className=\"card-description-box\" id={props.id}>\n      <h3>{props.id}</h3>\n      <h4>{props.name}</h4>\n      <h5>{facingText}</h5>\n      <p className=\"desc-text\">{props.desc}</p>\n    </div>\n  );\n};\n\nexport function CardImages(props){\n  let classes = `card-image card-itself rotate${props.facing}`\n  return (\n        <img \n          className={classes} \n          src={props.img} \n          alt={props.name} />\n  )\n}\n","import React from 'react';\nimport { CardImages, CardDescriptions } from './card';\n\nexport default class CardPopUp extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      expanded: false,\n      card: this.props\n    }\n  }\n\n  handleClick = () => {\n    if (this.state.expanded){\n      this.setState({expanded:false})\n    } else {\n      this.setState({expanded:true});\n    }\n  }\n\n  render() {\n    let display = <div className=\"empty-div\"></div>;\n    if (this.state.expanded === true){\n      display = <div onClick={this.handleClick}>\n        <CardImages {...this.state.card}/>\n        <CardDescriptions {...this.state.card}/>\n      </div>\n    } else {\n      display = <div onClick={this.handleClick}>\n        <CardImages {...this.state.card}/>\n      </div>\n    }\n    return (\n      <div\n      className=\"card-popUp\"\n      key={this.state.card.name}>\n      {display}\n    </div>\n    )\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { HistoryForm } from './historyForm.js';\nimport CardPopUp from './cardPopUp';\n\nexport class Spread extends React.Component {\n\n  render() {\n    //display heading \"Your Reading\" \n    //if cards have been dealt\n    let theHeading;\n      if (this.props.cardsDealt.length>0){\n        theHeading = <div>\n            <h2 className=\"reading-heading\">Your Reading</h2>\n            <p>Click the card to toggle description.</p>\n          </div>\n      } else {\n        theHeading=<div className=\"empty-div\"></div>\n      }\n    const historyParams = { \n      cardsDealt:this.props.cardsDealt,\n      currentUser:this.props.currentUser}\n\n    const cardImages = this.props.cardsDealt.map((card, index)=> {\n      return (\n        <li className=\"card-block\" key={card.name}>\n        <span\n         className=\"position-indicator\">Card position: {index+1}</span>\n        <CardPopUp {...card}/>\n      </li>\n    )\n  });\n\n  return (\n    <section className=\"reading-display\">\n        {theHeading}\n      <ul className=\"spread\">\n        {cardImages}\n      </ul>\n        <HistoryForm params={historyParams}/>\n    </section>\n  );\n}\n}\n// @cardsDealt: deal the appropriate number of cards\nfunction mapStateToProps(state) {\n  return {\n    cardsDealt:state.tarot.deck.slice(0, state.tarot.spreadNumber),\n    currentUser:state.auth.currentUser\n  };\n};\n\nexport default connect(mapStateToProps)(Spread);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { reset } from '../actions/index.js';\n\nexport class ClearButton extends React.Component {\n  render (){\n    let resetButton = <div className=\"empty-div\"></div>;\n    if (this.props.cardsDealt){  \n      if (this.props.cardsDealt.length > 0 ){\n        resetButton = <button\n        className=\"reset-button\"\n        id=\"reset-button\"\n        href=\"#\" \n        onClick={(e)=>this.props.dispatch(reset())}\n        >Clear Reading</button>\n      }\n    }\n    return(\n      resetButton\n      );\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    cardsDealt: state.tarot.cardsDealt,\n  };\n};\n\nexport default connect(mapStateToProps)(ClearButton);","import React from 'react';\nimport { connect } from 'react-redux';\n\n class ReadingHistory extends React.Component {\n\n  render(){\n    const user = this.props.user;\n\n    const HistoryBlock = () => {\n      if (this.props.history.length > 0){ \n        return this.props.history.map((reading) => {\n            return (<div key={reading.id}>\n              <p>Q: {reading.query}</p>\n              <p>Date: {reading.createdAt}</p>\n            </div>)\n        });\n        }\n       else return<div></div>\n    };\n\n    if(this.props.readingHistory === true){\n      return (\n        <section className=\"history-container\">\n          <h2>{user}'s reading history</h2>\n          <HistoryBlock />\n        </section>\n      );\n    } else return (<div></div>)\n  };\n};\n\nfunction mapStateToProps(state){\n  return {\n    readingHistory: state.tarot.readingHistory,\n    user: state.auth.currentUser,\n    history: state.auth.history,\n  }\n}\n\nexport default connect(mapStateToProps)(ReadingHistory)","import React from 'react';\n\nexport default function Footer(){\nreturn (\n  <footer className=\"footer\">\n    <p className=\"copy-info\">All images and text &copy; 2019 Publikwerks, LLC.</p>\n  </footer>\n)};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { toggle_info } from '../actions/index.js';\n\nexport class Info extends React.Component{\n\n  render () {\n    let infoBlock;\n    if(this.props.showInfo === false){\n      infoBlock =<div></div>\n    } else {\n      infoBlock = <aside>\n          <section className=\"landing-modal\">\n          <button\n            className=\"hide-info\"\n            id=\"hide-info\"\n            href=\"#\"\n            onClick={(e)=>this.props.dispatch(toggle_info())}\n            >hide info</button>\n            <h3>\n              DO WHAT THOU WILL SHALL BE THE WHOLE OF THE LAW.\n            </h3> \n            <p> Science, historically adversarial towards Mysticism, is now finding common ground between the two. Through the phenomenon known as Nonlocal Entanglement Physicists know that all things are connected outside of time and space. \n            Even a small change in one part of the Universe instantly affects every other part of the Universe. The best Science can say is that every place is right here, and every time is right now. The past, the present, and the future are all being created at the same time.\n            Mystics have long known that everything is connected, saying, “As above, so below,” and that “the Microcosm reflects the Macrocosm, and the Macrocosm reflects the Microcosm.” Within the smallest part of any thing is a bit of the Infinte. This idea of the Whole represented in the Part is the basic theory behind Entanglement and Divination. \n            If one has an accurate enough model of the Universe, they may periodically consult it to understand the bigger picture. The Tarot is a proven model for the examination of these patterns.\n            </p>\n            <h3>\n              Love is the Law. Love under WILL.\n            </h3>\n          </section>\n  </aside>\n    }\n    return (\n      infoBlock\n    );\n  }\n} \n\nfunction mapStateToProps(state){\n  return{\n    showInfo: state.tarot.showInfo,\n  }\n}\n\nexport default connect(mapStateToProps)(Info);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { set_deck } from './actions/index.js';\nimport { API_BASE_URL } from './config.js';\nimport  LoginForm  from './components/login.js';\nimport  Query  from './components/query.js';\nimport ErrorBoundary from './components/ErrorBoundary.js';\nimport  Header  from './components/header.js';\nimport  Spread  from './components/spread.js';\nimport ClearButton from './components/clearButton.js';\nimport ReadingHistory from './components/readingHistory.js';\nimport Footer from './components/footer.js';\nimport Info from './components/Info';\n\nexport class App extends Component {\n\n  componentDidMount() {\n    this.loadDeck();\n  }\n\n// grab a fresh deck from the server\nloadDeck(){\n  return fetch(`${API_BASE_URL}/tarotDeck`)\n    .then(res => {\n      if (!res.ok){\n        return Promise.reject(res.statusText);\n      }\n      return res.json();\n    })   \n    .then((data) => {\n      return this.props.dispatch(set_deck(data))\n    })\n    .catch(err =>\n      this.setState({\n        error: 'could not load deck'\n      })\n    );\n  }\n  \n  render() {\n    return (\n      <main className=\"App\">\n          <Header />\n        <ErrorBoundary>\n          <LoginForm />\n        </ErrorBoundary>\n          <Info />\n          <Query />\n          <ClearButton />\n          <Spread />\n          <ClearButton />\n          <ReadingHistory />\n          <Footer />\n      </main>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    deck: state.tarot.deck,\n    error: state.auth.error\n  };\n}\n\nexport default connect(mapStateToProps)(App);","import { \n  MAKE_SEARCH,\n  OPEN_HISTORY,\n  RESET,\n  SET_DECK, \n  SHUFFLE_DECK,\n  TAKE_QUERY, \n  TOGGLE_INFO,\n  TOGGLE_LOGIN, \n  TOGGLE_SIGNIN,\n  TRIM_DECK, \n} from '../actions/index.js';\n\nconst shuffle = require('shuffle-array');\n\nconst initialState = {\n  showInfo: false,\n  spreadNumber: 0,\n  cardsDealt: [],\n  history: [],\ndeck: [\n  {\n    id: '0',\n    name: 'fool',\n    desc: 'lorem ipsum',\n    img: 'https://static1.squarespace.com/static/590185441b10e3a0176bb2bf/t/599f4e967131a550b1edabed/1530126054227/?format=500w',\n    facing: 0,\n  }, \n  {\n    id: '1',\n    name: 'magus',\n    desc: 'lorem ipsum',\n    img: 'https://static1.squarespace.com/static/590185441b10e3a0176bb2bf/t/599f4e967131a550b1edabed/1530126054227/?format=500w',\n    facing: 0,\n  },\n  {\n    id: '2',\n    name: 'heirophant',\n    desc: 'lorem ipsum',\n    img: 'https://static1.squarespace.com/static/590185441b10e3a0176bb2bf/t/599f4e967131a550b1edabed/1530126054227/?format=500w',\n    facing: 0,\n  },\n  {\n    id: '3',\n    name: 'empress',\n    desc: 'lorem ipsum',\n    img: 'https://static1.squarespace.com/static/590185441b10e3a0176bb2bf/t/599f4e967131a550b1edabed/1530126054227/?format=500w',\n    facing: 0,\n  },\n  {\n    id: '4',\n    name: 'emperor',\n    desc: 'lorem ipsum',\n    img: 'https://static1.squarespace.com/static/590185441b10e3a0176bb2bf/t/599f4e967131a550b1edabed/1530126054227/?format=500w',\n    facing: 0,\n  },\n  {\n    id: '5',\n    name: 'fifth',\n    desc: 'lorem ipsum',\n    img: 'https://static1.squarespace.com/static/590185441b10e3a0176bb2bf/t/599f4e967131a550b1edabed/1530126054227/?format=500w',\n    facing: 0,\n  },\n  {\n    id: '6',\n    name: 'sixth',\n    desc: 'lorem ipsum',\n    img: 'https://static1.squarespace.com/static/590185441b10e3a0176bb2bf/t/599f4e967131a550b1edabed/1530126054227/?format=500w',\n    facing: 0,\n  },\n  {\n    id: '7',\n    name: 'seventh',\n    desc: 'lorem ipsum',\n    img: 'https://static1.squarespace.com/static/590185441b10e3a0176bb2bf/t/599f4e967131a550b1edabed/1530126054227/?format=500w',\n    facing: 0,\n  },\n  {\n    id: '8',\n    name: 'eighth',\n    desc: 'lorem ipsum',\n    img: 'https://static1.squarespace.com/static/590185441b10e3a0176bb2bf/t/599f4e967131a550b1edabed/1530126054227/?format=500w',\n    facing: 0,\n  },\n  {\n    id: '9',\n    name: 'ninth',\n    desc: 'lorem ipsum',\n    img: 'https://static1.squarespace.com/static/590185441b10e3a0176bb2bf/t/599f4e967131a550b1edabed/1530126054227/?format=500w',\n    facing: 0,\n  },\n  {\n    id: '10',\n    name: 'wheel of fortune',\n    desc: 'lorem ipsum',\n    img: 'https://static1.squarespace.com/static/590185441b10e3a0176bb2bf/t/599f4e967131a550b1edabed/1530126054227/?format=500w',\n    facing: 0,\n  },\n]\n};\n\nexport const deckReducer = (state=initialState, action) => {\n  if(action.type === RESET){\n    return Object.assign({}, state, {\n      spreadNumber: 0,\n      textQuery: null,\n      cardsDealt: [],\n    });\n  } else if(action.type === SHUFFLE_DECK){\n    let newDeck = shuffle(state.deck);\n    function direction(){\n      return Math.floor(Math.random() * Math.floor(4));\n    }\n    newDeck.map(card => card.facing = direction());\n    return Object.assign({}, state, {\n      deck: [...newDeck]\n    });\n  } else if(action.type === SET_DECK){\n    let shuffledDeck = shuffle(action.deck);\n    function direction(){\n      return Math.floor(Math.random() * Math.floor(4));\n    }\n    shuffledDeck.map(card => card.facing = direction());\n    return Object.assign({}, state, {\n      deck: [...shuffledDeck]\n    });\n  } else if(action.type === TRIM_DECK){\n    return Object.assign({}, state, {\n      spreadNumber: action.values,\n      cardsDealt: [...state.deck.slice(0, action.values)]\n    });\n  } else if(action.type === TAKE_QUERY){\n    return Object.assign({}, state, {\n      textQuery: action.textQuery\n    });\n  } else if(action.type === MAKE_SEARCH){\n    return Object.assign({}, state, {\n      searchTerm: action.searchTerm\n    });\n  } else if(action.type === TOGGLE_LOGIN){\n    if(state.login === true){\n      return Object.assign({}, state, {\n        login: false,\n        signIn: false\n      })\n    } else\n    return Object.assign({}, state, {\n      login: true\n    });\n  } else if(action.type === TOGGLE_SIGNIN){\n    if(state.signin){\n      return Object.assign({}, state, {\n        signIn: !state.signIn\n      })\n    } else {\n      return Object.assign({}, state, {\n        signIn: true\n      });\n    }\n  } else if(action.type === OPEN_HISTORY){\n    if (state.readingHistory === true){\n      return Object.assign({}, state, {\n        readingHistory: false,\n      });\n    } else {\n      return Object.assign({}, state, {\n        readingHistory: true,\n      });\n    }\n  } else if(action.type === TOGGLE_INFO){\n    if (state.showInfo === false){\n      return Object.assign({}, state, {\n        showInfo: true,\n      })\n    } else {\n      return Object.assign({}, state, {\n        showInfo: false,\n      })\n    }\n  };\n  return state;\n};\n","import { \n  SET_AUTH_TOKEN,\n  CLEAR_AUTH,\n  AUTH_REQUEST,\n  AUTH_SUCCESS,\n  AUTH_ERROR,\n  FETCH_HISTORY_ERROR,\n  FETCH_HISTORY_SUCCESS,\n  FETCH_HISTORY_REQUEST,\n  SAVE_HISTORY_ERROR,\n  SAVE_HISTORY_SUCCESS,\n  SAVE_HISTORY_REQUEST,\n} from '../actions/protected.js';\n\nconst initialState = {\n  authToken:  null,\n  currentUser: null,\n  error: null,\n  loading: false,\n  cardsDealt: [],\n  spreadNumber: 0,\n};\n\nexport default function reducer (state = initialState, action){\n  if (action.type === SET_AUTH_TOKEN){\n    return Object.assign({}, state, {\n      authToken: action.authToken,\n    });\n  } else if (action.type === CLEAR_AUTH){\n    return Object.assign({}, state, {\n      authToken: null,\n      currentUser: null,\n    });\n  } else if (action.type === AUTH_REQUEST){\n    return Object.assign({}, state,{\n      loading: true,\n      error: null,\n    });\n  } else if (action.type === AUTH_SUCCESS){\n    return Object.assign({}, state, {\n      loading: false,\n      currentUser: action.currentUser,\n     // history: action.history,\n    });\n  } else if (action.type === AUTH_ERROR){\n    return Object.assign({}, state, {\n      loading: false,\n      error: action.error,\n    });\n  } else if(action.type === FETCH_HISTORY_REQUEST ){\n    return Object.assign({}, state, {\n      loading: true,\n      error: null,\n    });\n  } else if(action.type === FETCH_HISTORY_SUCCESS){\n    return Object.assign({}, state, { \n      loading: false,\n      history: action.history,\n    });\n  } else if(action.type === FETCH_HISTORY_ERROR){\n    return Object.assign({}, state, {\n      loading: false,\n      error: action.error,\n    });\n  } else if(action.type === SAVE_HISTORY_REQUEST ){\n    return Object.assign({}, state, {\n      loading: true,\n      error: null,\n    });\n  } else if(action.type === SAVE_HISTORY_SUCCESS){\n    return Object.assign({}, state, { \n      loading: false,  \n      spreadNumber: 0,\n      textQuery: null,\n      cardsDealt: [],\n    });\n  } else if(action.type === SAVE_HISTORY_ERROR){\n    return Object.assign({}, state, {\n      loading: false,\n      error: action.error,\n    });\n  }\n return state;\n}\n","import { createStore, combineReducers, compose, applyMiddleware } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport thunk from 'redux-thunk';\nimport { deckReducer } from '../reducers/index.js';\nimport authReducer from '../reducers/auth.js';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  form: formReducer,\n  tarot: deckReducer,\n  auth: authReducer,\n});\n//check for localStorage.authToken and login\nexport default createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './components/store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n ( <Provider store={store}>\n      <App />\n  </Provider>), document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}