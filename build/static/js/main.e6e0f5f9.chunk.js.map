{"version":3,"sources":["actions/index.js","config.js","actions/utils.js","actions/protected.js","local-storage.js","validators.js","components/register.js","components/login.js","components/query.js","components/memberButton.js","components/header.js","components/card.js","components/spread.js","components/clearButton.js","components/readingHistory.js","components/footer.js","App.js","reducers/index.js","reducers/auth.js","components/store.js","serviceWorker.js","index.js"],"names":["toggle_signin","type","API_BASE_URL","process","REACT_APP_API_BASE_URL","normalizeResponseErrors","res","ok","headers","has","get","startsWith","json","then","err","Promise","reject","code","status","message","statusText","SET_AUTH_TOKEN","CLEAR_AUTH","AUTH_REQUEST","AUTH_SUCCESS","AUTH_ERROR","FETCH_HISTORY_REQUEST","FETCH_HISTORY_SUCCESS","fetchHistorySuccess","history","FETCH_HISTORY_ERROR","storeAuthInfo","authToken","dispatch","decodedToken","jwtDecode","currentUser","user","username","userHistory","setAuthToken","authSuccess","localStorage","setItem","e","saveAuthToken","Login","password","console","log","fetch","concat","method","Content-Type","body","JSON","stringify","_ref","catch","error","SubmissionError","_error","required","value","undefined","nonEmpty","trim","Register","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","handleSubmit","props","react_default","a","createElement","className","onSubmit","Field","component","name","label","validators","validate","disabled","pristine","submitting","React","Component","registerForm","reduxForm","form","values","onSubmitFail","errors","focus","connect","state","login","tarot","LoginWindow","aria-live","signIn","components_register","id","onClick","loginForm","Query","cardsDealt","length","textQuery","placeholder","min","max","queryForm","trim_deck","spreadNumber","deck","MemberButton","_this","href","auth","Header","memberButton","searchTerm","CardDescriptions","desc","CardImages","facing","classes","src","img","alt","slice","theHeading","yourReading","cardImages","map","card","cardDescriptions","index","historyForm","saveToHistory","ClearButton","ReadingHistory","readingHistory","reading","query","createdAt","Footer","App","_Component","loadDeck","data","setState","BrowserRouter","components_header","components_login","src_components_query","src_components_spread","components_clearButton","shuffle","require","initialState","loading","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","formReducer","action","assign","newDeck","Math","floor","random","toConsumableArray","shuffledDeck","signin","createStore","applyMiddleware","thunk","Boolean","location","hostname","match","ReactDOM","render","es","store","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e6e0f5f9.chunk.js","sourcesContent":["export const RESET = 'RESET';\nexport const reset = () =>({\n  type: RESET,\n});\n\nexport const TRIM_DECK = 'TRIM_DECK';\nexport const trim_deck = (values)  => ({\n  type:  TRIM_DECK,\n  values\n});\n\nexport const SHUFFLE_DECK = 'SHUFFLE_DECK';\nexport const shuffle_deck = () => ({\n  type: SHUFFLE_DECK,\n});\n\nexport const SET_DECK = 'SET_DECK';\nexport const set_deck = (deck) => ({\n  type: SET_DECK,\n  deck\n});\n\nexport const TAKE_QUERY = 'TAKE_QUERY';\nexport const take_query = (textQuery) => ({\n  type: TAKE_QUERY,\n  textQuery\n});\n\nexport const MAKE_SEARCH = 'MAKE_SEARCH';\nexport const make_search = (searchTerm) => ({\n  type: MAKE_SEARCH,\n  searchTerm\n});\n\nexport const TOGGLE_LOGIN ='TOGGLE_LOGIN';\nexport const toggle_login = () => ({\n  type: TOGGLE_LOGIN\n});\n\nexport const TOGGLE_SIGNIN = 'TOGGLE_SIGNIN';\nexport const toggle_signin = () => ({\n  type: TOGGLE_SIGNIN,\n});\n\nexport const OPEN_HISTORY = 'OPEN_HISTORY';\nexport const open_history = () => ({\n  type: OPEN_HISTORY\n});","export const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8080/api';","export const normalizeResponseErrors = res => {\n  if (!res.ok) {\n    if (\n      res.headers.has('content-type') &&\n      res.headers.get('content-type').startsWith('application/json')\n    ){\n      return res.json().then(err=>Promise.reject(err));\n    }\n    return Promise.reject({\n      code: res.status,\n      message: res.statusText\n    });\n  }\n  return res;\n};","import { API_BASE_URL } from '../config.js';\n\nimport jwtDecode from 'jwt-decode';\n\nimport { SubmissionError } from 'redux-form';\nimport { normalizeResponseErrors } from './utils';\n\nimport { saveAuthToken, clearAuthToken } from '../local-storage';\nimport { toggle_login  } from './index.js';\n\nexport const SET_AUTH_TOKEN = 'SET_AUTH_TOKEN';\nexport const setAuthToken = authToken => ({\n    type: SET_AUTH_TOKEN,\n    authToken\n});\n\nexport const CLEAR_AUTH = 'CLEAR_AUTH';\nexport const clearAuth = () => ({\n    type: CLEAR_AUTH\n});\n\nexport const AUTH_REQUEST = 'AUTH_REQUEST';\nexport const authRequest = () => ({\n    type: AUTH_REQUEST\n});\n\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const authSuccess = currentUser => ({\n    type: AUTH_SUCCESS,\n    currentUser\n});\n\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const authError = error => ({\n    type: AUTH_ERROR,\n    error\n});\n\nexport const FETCH_HISTORY_REQUEST = 'FETCH_HISTORY';\nexport const fetchHistoryRequest = () => ({\n  type: FETCH_HISTORY_REQUEST,\n});\n\nexport const FETCH_HISTORY_SUCCESS = 'FETCH_HISTORY_SUCCESS';\nexport const fetchHistorySuccess = history => ({\n  type: FETCH_HISTORY_SUCCESS,\n  history\n});\n\nexport const FETCH_HISTORY_ERROR = 'FETCH_HISTORY_ERROR';\nexport const fetchHistoryError = error => ({\n  type: FETCH_HISTORY_ERROR,\n  error\n});\n\n// Stores the auth token in state and localStorage, and decodes and stores\n// the user data stored in the token\nconst storeAuthInfo = (authToken, dispatch) => {\n  const decodedToken = jwtDecode(authToken);\n  const currentUser = (decodedToken.user.username);\n  const userHistory = (decodedToken.user.history);\n  dispatch(setAuthToken(authToken));\n  dispatch(authSuccess(currentUser));\n  dispatch(fetchHistorySuccess(userHistory));\n  saveAuthToken(authToken);\n};\n\n// create new user from register component\nexport const CreateUser = (username, password) => (dispatch) => {\n  console.log('createUser ran');\n  return (\n    fetch(`${API_BASE_URL}/users`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    })\n  )\n  .then(res => normalizeResponseErrors(res))\n  .then(res => res.json())\n  .then(res => {\n    console.log(res);\n    return res;\n  })\n  .catch(err => {\n    const { code } = err;\n    return Promise.reject(\n      new SubmissionError({\n        _error: code\n      })\n    );\n  })\n  \n};\n\nexport const Login = (username, password) => dispatch => {\n  console.log('login ran');\n  dispatch(authRequest());\n  return (\n    fetch(`${API_BASE_URL}/auth/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    })\n    .then(res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .then(({authToken}) => {\n      console.log(authToken);\n      dispatch(toggle_login());\n      storeAuthInfo(authToken, dispatch)})\n    .catch(err => {\n      const { code } = err;\n      const message =\n        code === 401\n          ? 'Incorrect username or password'\n          : 'Unable to login, please try again';\n      dispatch(authError(err));\n      return Promise.reject(\n        new SubmissionError({\n          _error: message\n        })\n      );\n    })\n  );\n};\n\nexport const refreshAuthToken = () => (dispatch, getState) => {\n  const authToken = getState().auth.authToken;\n  return fetch(`${API_BASE_URL}/auth/refresh`, {\n    method: 'POST',\n    headers: {\n      authorization: `Bearer ${authToken}`\n    }\n  })\n  .then(res => normalizeResponseErrors(res))\n  .then(res => res.json())\n  .then(({authToken}) => storeAuthInfo(authToken, dispatch))\n  .catch(err => {\n    clearAuthToken(authToken);\n  });\n};\n\nexport const addReadingToHistory = () => (dispatch, getState) => {\n  const userId = getState().auth.currentUser;\n  const authToken = getState().auth.authToken;\n  const cards = getState().tarot.spreadNumber;\n  const spread = getState().tarot.deck.slice(0, cards); \n  const query = getState().tarot.textQuery;\n\n  return fetch(`${API_BASE_URL}/auth/${userId}/add`, {\n    method: 'PUT',\n    headers: {\n      authorization: `Bearer ${authToken}`,\n    },\n    body: {\n      comments: '',\n      query,\n      spread,\n      userId:'',\n    }\n  })\n  .then(res => normalizeResponseErrors(res))\n  .then(res => res.json())\n  .then(({authToken}) => storeAuthInfo(authToken, dispatch))\n  .catch(err => {\n    clearAuthToken(authToken);\n  });\n}\n\nexport const fetchHistory = username => dispatch => {\n  dispatch(fetchHistoryRequest());\n  return fetch(`${API_BASE_URL}/auth/?id=${username}/`)\n    .then( res => {\n      if (!res.ok) {\n        return Promise.reject('Something went wrong');\n      }\n      return res.json();\n    })\n    .then(history => \n      dispatch(fetchHistorySuccess(history)))\n    .catch(err => {\n      const { code } = err;\n      return Promise.reject(\n        new SubmissionError({\n          _error: code\n        })\n      );\n    })\n};","export const loadAuthToken = () => {\n  return localStorage.getItem('authToken');\n};\n\nexport const saveAuthToken = authToken => {\n  try {\n      localStorage.setItem('authToken', authToken);\n  } catch (e) {}\n};\n\nexport const clearAuthToken = () => {\n  try {\n      localStorage.removeItem('authToken');\n  } catch (e) {}\n};","\nexport const required = value => (value ? undefined : 'Required');\nexport const nonEmpty = value =>\n    value.trim() !== '' ? undefined : 'Cannot be empty';\nexport const isTrimmed = value =>\n    value.trim() === value ? undefined : 'Cannot start or end with whitespace';\nexport const length = length => value => {\n    if (length.min && value.length < length.min) {\n        return `Must be at least ${length.min} characters long`;\n    }\n    if (length.max && value.length > length.max) {\n        return `Must be at most ${length.max} characters long`;\n    }\n};\nexport const matches = field => (value, allValues) =>\n    field in allValues && value.trim() === allValues[field].trim()\n        ? undefined\n        : 'Does not match';","import React from 'react';\nimport {Field, reduxForm, focus } from 'redux-form';\nimport { toggle_signin } from '../actions/index.js';\nimport './register.css';\nimport { CreateUser, Login } from '../actions/protected.js';\n\nimport { required, nonEmpty } from '../validators';\nimport { connect } from 'react-redux';\n\n\nexport class Register extends React.Component{\n  render(){\n    let error;\n    const {handleSubmit}=this.props;\n    return (\n      <div className=\"register-container\">\n            <form className=\"form-container\"  \n              onSubmit={handleSubmit}>\n            {error}\n            <label className=\"label\">User Name</label>\n            <Field component=\"input\"\n              name=\"username\"\n              label=\"username\"\n              type=\"text\"\n              className=\"username\"\n              validators={[required, nonEmpty]}\n            /><br />\n            <label className=\"label\">Password</label>\n            <Field component=\"input\"\n              name=\"password\"\n              type=\"password\"\n              className=\"password\"\n              validate={[required, nonEmpty]}\n            /><br />\n            <button name=\"signup-button\"\n              type=\"submit\"\n              className=\"signup-button\"\n              disabled={this.props.pristine || this.props.submitting}\n            >Join</button>\n            </form>\n          </div>\n    );\n  };\n};\n\nconst registerForm = reduxForm({\n  form: 'register',\n  onSubmit: (values, dispatch) => {\n   return dispatch(CreateUser(values.username, values.password))\n   .then(() => dispatch(Login(values.username, values.password)))\n   .then(() => dispatch(toggle_signin()));\n  },\n  onSubmitFail: (errors, dispatch) => dispatch(focus('login', 'username'))\n})(Register);\n\nfunction mapStateToProps(state){\n  return {\n    login: state.tarot.login,\n  };\n}\n\nexport default connect(mapStateToProps)(registerForm);","import React from 'react';\nimport { connect } from 'react-redux';\nimport{ Field, reduxForm, focus } from 'redux-form';\nimport { toggle_signin } from '../actions/index.js';\nimport { Login } from '../actions/protected.js';\nimport  Register  from './register.js';\nimport './login.css';\n\nimport { required, nonEmpty } from '../validators';\n\nfunction submit(values, dispatch) {\n  console.log('onSubmit ran');\n  return dispatch(Login(values.username, values.password));\n}\n\nexport class LoginWindow extends React.Component {\n  render() {\n    let error;\n    const {dispatch}=this.props;\n    function signUp(){\n      console.log('signUp ran');\n      dispatch(toggle_signin());\n    }\n    const {handleSubmit}= this.props;\n    if (this.props.error) {\n      error = (\n        <div className=\"form-error\" aria-live=\"polite\">\n          {this.props.error}\n          </div>\n      );\n    }\n    if (this.props.login === true){\n      if (this.props.signIn === true){\n        return (\n          <Register />\n        );\n      } else {\n        return (\n        <div className=\"login-container\">\n          <form \n            className=\"form-container\"  \n            onSubmit={handleSubmit}>\n            {error}\n          <button \n            name=\"newuser-button\"\n            id=\"newuser-button\"\n            type=\"button\"\n            className=\"newuser-button\"\n            onClick={signUp}\n          >Register</button>\n          <label className=\"label\">User Name</label>\n          <Field component=\"input\"\n            name=\"username\"\n            label=\"username\"\n            type=\"text\"\n            className=\"username\"\n            validators={[required, nonEmpty]}\n          /><br />\n          <label className=\"label\">Password</label>\n          <Field component=\"input\"\n            name=\"password\"\n            type=\"password\"\n            className=\"password\"\n            validate={[required, nonEmpty]}\n          /><br />\n          <button \n            name=\"login-button\"\n            id=\"login-button\"\n            type=\"submit\"\n            className=\"login-button\"\n            disabled={this.props.pristine || this.props.submitting}\n          >Sign In</button>\n          </form>\n        </div>\n        );\n      }\n    } else return (<div></div>);\n  }\n}\n\nexport const loginForm = reduxForm({\n  form: 'login',\n  onSubmit: submit,\n  onSubmitFail: (errors, dispatch) => dispatch(focus('login', 'username'))\n  }\n)(LoginWindow);\n\nfunction mapStatetoProps(state){\n  return {\n    login: state.tarot.login,\n    signIn: state.tarot.signIn\n  };\n}\n\nexport default connect(mapStatetoProps)(loginForm);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport {  shuffle_deck, trim_deck, take_query }  from '../actions/index.js';\nimport './query.css';\n//import store from './store.js';\n\nexport class Query extends React.Component {\n  render () {\n    if (this.props.login !== true && this.props.cardsDealt.length>0){\n      return (\n        <div className=\"query-container\">\n          <h3>Your query:</h3>\n          <p className=\"display-query\">{this.props.textQuery}</p>\n        </div>\n      )\n    } else \n    if (this.props.login !== true){\n      console.log(this.props.cardsDealt.length)\n      const { handleSubmit } = this.props;\n      return (\n        <div className=\"query-container\">\n          <form onSubmit={ handleSubmit }>\n          <Field component=\"input\"\n            name=\"textQuery\"\n            className=\"text-query\"\n            type=\"text\"\n            placeholder=\"What would you ask the cards?\"\n          />\n          <label className=\"spreadNumber-label\">number of cards to deal: </label>\n          <Field component=\"input\" \n            name=\"spreadNumber\" \n            className=\"spread-number\" \n            type=\"number\" \n            placeholder=\"all\"\n            min={1} max={78}\n          /><br />\n            <button \n              name=\"deal-button\" \n              id=\"deal-button\"\n              type=\"submit\"  className=\"deal-button\">Deal</button>\n          </form>\n        </div>\n      );\n    } else {\n      return (<div></div>);\n    }\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    login: state.tarot.login,\n    deck: state.tarot.deck,\n    cardsDealt: state.tarot.cardsDealt,\n    textQuery: state.tarot.textQuery,\n  };\n}\n\nconst queryForm = reduxForm({\n  form: 'query',\n  onSubmit: (values, dispatch) => { \n    dispatch(trim_deck(values.spreadNumber));\n    dispatch(take_query(values.textQuery));\n    dispatch(shuffle_deck());\n  }\n})(Query);\n\nexport default connect(mapStateToProps)(queryForm);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { toggle_login, open_history } from '../actions/index.js';\n\nexport class MemberButton extends React.Component {\n  render (){\n    console.log('current user is ' + this.props.currentUser);\n    if (this.props.currentUser){\n      return (\n        <button\n          className=\"header-link\"\n          id=\"custom-button\"\n          href=\"#\" \n          onClick={(e)=>this.props.dispatch(open_history())}>{this.props.currentUser}</button>\n      )\n    } else {\n      return(\n        <button\n          className=\"header-link\"\n          id=\"member-login-button\"\n          href=\"#\" \n          onClick={(e)=>this.props.dispatch(toggle_login())}>Member Login</button>\n      );\n    }\n  }\n} \n\nfunction mapStateToProps(state){\n  return {\n    currentUser: state.auth.currentUser,\n  };\n};\n\nexport default connect(mapStateToProps)(MemberButton);","import React from 'react';\nimport { reduxForm } from 'redux-form';\nimport MemberButton from './memberButton.js';\nimport { make_search } from '../actions/index.js';\nimport './header.css';\n\nexport class Header extends React.Component {\n  render() {\n    const { handleSubmit } = this.props;\n    return (\n      <div className=\"header-container\">\n        <header className=\"App-header\">\n          <nav>\n            <a className=\"header-link\"\n              href=\"https://www.publikwerks.com/thelema-tarot-deck/tarot-deck-pre-order\">Purchase Deck</a>\n            <MemberButton />\n          </nav>\n          <form className=\"searchBar\" onSubmit={handleSubmit}>\n            {/* <Field component=\"input\" \n              type=\"text\" \n              name=\"searchTerm\"\n              className=\"search-field\"\n            /><br />\n            <button \n              name=\"search\"\n              id=\"search-button\"\n              type=\"submit\"\n              className=\"search-button\"\n              disabled={this.props.pristine || this.props.submitting}>Search</button> */}\n          </form>\n          <h1 className=\"banner\">FORTUNE CARDS</h1>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default reduxForm({\n  form: 'search',\n  onSubmit: (values, dispatch) => {\n    dispatch(make_search(values.searchTerm));\n  }\n})(Header)","import React from 'react';\n\nimport './card.css';\n\nexport function CardDescriptions(props) {\n  return (\n    <div className=\"card-description-box\" id={props.id}>\n      <h3>{props.id}</h3>\n      <h4>{props.name}</h4>\n      <p className=\"desc-text\">{props.desc}</p>\n    </div>\n  );\n};\n\nexport function CardImages(props){\n  console.log(props.facing);\n  let classes = `card-image rotate${props.facing}`\n  return (\n    <div className=\"card-image-container\">\n        <img className={classes} src={props.img} alt={props.name} />\n    </div>\n  )\n}\n","import React from 'react';\nimport './spread.css';\nimport { connect } from 'react-redux';\nimport {CardImages, CardDescriptions } from './card';\n\nexport function Spread(props) {\n\n  //display heading if cards have been dealt\n  function yourReading(){\n    if (props.cardsDealt.length>0){\n      return (\n        <h2 className=\"reading-heading\">Your Reading</h2>\n      )\n    }\n  }\n\n  //display the card images on top\n  const theHeading = yourReading();\n  const cardImages = props.cardsDealt.map((card)=> {\n    return (\n      <li className=\"card-image\" key={card.name}>\n        <CardImages {...card}/>\n      </li>\n    )\n  });\n\n  // display the card information below\n  const cardDescriptions = \n    props.cardsDealt.map((card, index) => {\n      return(\n      <li className=\"card-description\" key={card.name}>\n      <span className=\"position-indicator\">Card position: {index+1}</span>\n      <CardDescriptions {...card}/>\n    </li>\n      )\n  });\n\n  //display the comment and save form\n  function saveToHistory() {\n    // function handleSubmit(e) {\n    //   e.preventDefault();\n    //   console.log(e);\n    // }\n  \n\n    if (props.cardsDealt.length>0){\n      return (\n        <div className=\"history-form\">\n        <form>\n          <label>Comments:</label>\n          <input type=\"text\"\n          className=\"comments\"\n          placeholder=\"We'll see...\"></input>\n            {/* <button\n            className=\"save-history\"\n            id=\"save-history\"\n            type=\"submit\"\n            onSubmit={handleSubmit}\n            >Save</button> */}\n        </form>\n        </div>\n      )\n    }\n  }\n\n  const historyForm = saveToHistory();\n\n  return (\n    <div className=\"reading-display\">\n        {theHeading}\n      <ul className=\"spread\">\n        {cardImages}\n      </ul>\n      <ul className=\"spread\">\n        {cardDescriptions}\n      </ul>\n        {historyForm}\n    </div>\n  );\n}\n\n// @cardsDealt: deal the appropriate number of cards\nfunction mapStateToProps(state) {\nreturn {\n  cardsDealt:state.tarot.deck.slice(0, state.tarot.spreadNumber)\n};\n};\n\nexport default connect(mapStateToProps)(Spread);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { reset } from '../actions/index.js';\nimport './clearButton.css';\n\nexport class ClearButton extends React.Component {\n  render (){\n    return(\n      <button\n          className=\"reset-button\"\n          id=\"reset-button\"\n          href=\"#\" \n          onClick={(e)=>this.props.dispatch(reset())}>Clear Reading</button>\n      );\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    currentUser: state.auth.currentUser,\n  };\n};\n\nexport default connect(mapStateToProps)(ClearButton);","import React from 'react';\nimport { connect } from 'react-redux';\n\n class ReadingHistory extends React.Component {\n\n  render(){\n    const user = this.props.user;\n\n    const HistoryBlock = () => {\n      if (this.props.history.length > 0){ \n        return this.props.history.map((reading, index) => {\n            return (<div id={index}>\n              <p>Q: {reading.query}</p>\n              <p>Date: {reading.createdAt}</p>\n            </div>)\n        });\n        }\n       else return<div></div>\n    };\n\n    if(this.props.readingHistory === true){\n      return (\n        <div className=\"history-container\">\n          <h2>{user}'s reading history</h2>\n          <HistoryBlock />\n        </div>\n      );\n    } else return (<div></div>)\n  };\n};\n\nfunction mapStateToProps(state){\n  return {\n    readingHistory: state.tarot.readingHistory,\n    user: state.auth.currentUser,\n    history: state.auth.history,\n  }\n}\n\nexport default connect(mapStateToProps)(ReadingHistory)","import React from 'react';\nimport './footer.css';\n\nexport default function Footer(){\nreturn (\n  <div className=\"footer\">\n  <p className=\"copy-info\">All images and text &copy; 2019 Publikwerks, LLC.</p>\n  </div>\n)};","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { set_deck } from './actions/index.js';\nimport { API_BASE_URL } from './config.js';\nimport  LoginWindow  from './components/login.js';\nimport  Query  from './components/query.js';\nimport  Header  from './components/header.js';\nimport  Spread  from './components/spread.js';\nimport ClearButton from './components/clearButton.js';\nimport ReadingHistory from './components/readingHistory.js';\nimport Footer from './components/footer.js';\n\nexport class App extends Component {\n\ncomponentDidMount() {\n  this.loadDeck();\n}\n\n// grab a fresh deck from the server\nloadDeck(){\n  return fetch(`${API_BASE_URL}/tarotDeck`)\n    .then(res => {\n      if (!res.ok){\n        return Promise.reject(res.statusText);\n      }\n      return res.json();\n    })   \n    .then((data) => {\n      console.log(data);\n      return this.props.dispatch(set_deck(data))\n    })\n    .catch(err =>\n      this.setState({\n        error: 'could not load deck'\n      })\n    );\n  }\n  \n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Header />\n          <LoginWindow />\n          <Query />\n          <Spread />\n          <ClearButton />\n          <ReadingHistory />\n          <Footer />\n        </div>\n      </Router>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    deck: state.tarot.deck,\n  };\n}\n\nexport default connect(mapStateToProps)(App);","\nimport { \n  RESET,\n  SET_DECK, \n  TRIM_DECK, \n  TAKE_QUERY, \n  MAKE_SEARCH,\n  TOGGLE_LOGIN, \n  OPEN_HISTORY,\n  TOGGLE_SIGNIN,\n  SHUFFLE_DECK,\n} from '../actions/index.js';\n\nconst shuffle = require('shuffle-array');\n\nconst initialState = {\nspreadNumber: 0,\ncardsDealt: 0,\nhistory: [],\ndeck: [\n  {\n    id: '0',\n    name: 'fool',\n    desc: 'lorem ipsum',\n    img: 'https://static1.squarespace.com/static/590185441b10e3a0176bb2bf/t/599f4e967131a550b1edabed/1530126054227/?format=500w',\n    facing: 0,\n  }, \n  {\n    id: '1',\n    name: 'magus',\n    desc: 'lorem ipsum',\n    img: 'https://static1.squarespace.com/static/590185441b10e3a0176bb2bf/t/599f4e967131a550b1edabed/1530126054227/?format=500w',\n    facing: 0,\n  },\n  {\n    id: '2',\n    name: 'heirophant',\n    desc: 'lorem ipsum',\n    img: 'https://static1.squarespace.com/static/590185441b10e3a0176bb2bf/t/599f4e967131a550b1edabed/1530126054227/?format=500w',\n    facing: 0,\n  },\n  {\n    id: '3',\n    name: 'empress',\n    desc: 'lorem ipsum',\n    img: 'https://static1.squarespace.com/static/590185441b10e3a0176bb2bf/t/599f4e967131a550b1edabed/1530126054227/?format=500w',\n    facing: 0,\n  },\n  {\n    id: '4',\n    name: 'emperor',\n    desc: 'lorem ipsum',\n    img: 'https://static1.squarespace.com/static/590185441b10e3a0176bb2bf/t/599f4e967131a550b1edabed/1530126054227/?format=500w',\n    facing: 0,\n  },\n  {\n    id: '5',\n    name: 'fifth',\n    desc: 'lorem ipsum',\n    img: 'https://static1.squarespace.com/static/590185441b10e3a0176bb2bf/t/599f4e967131a550b1edabed/1530126054227/?format=500w',\n    facing: 0,\n  },\n  {\n    id: '6',\n    name: 'sixth',\n    desc: 'lorem ipsum',\n    img: 'https://static1.squarespace.com/static/590185441b10e3a0176bb2bf/t/599f4e967131a550b1edabed/1530126054227/?format=500w',\n    facing: 0,\n  },\n  {\n    id: '7',\n    name: 'seventh',\n    desc: 'lorem ipsum',\n    img: 'https://static1.squarespace.com/static/590185441b10e3a0176bb2bf/t/599f4e967131a550b1edabed/1530126054227/?format=500w',\n    facing: 0,\n  },\n  {\n    id: '8',\n    name: 'eighth',\n    desc: 'lorem ipsum',\n    img: 'https://static1.squarespace.com/static/590185441b10e3a0176bb2bf/t/599f4e967131a550b1edabed/1530126054227/?format=500w',\n    facing: 0,\n  },\n  {\n    id: '9',\n    name: 'ninth',\n    desc: 'lorem ipsum',\n    img: 'https://static1.squarespace.com/static/590185441b10e3a0176bb2bf/t/599f4e967131a550b1edabed/1530126054227/?format=500w',\n    facing: 0,\n  },\n  {\n    id: '10',\n    name: 'wheel of fortune',\n    desc: 'lorem ipsum',\n    img: 'https://static1.squarespace.com/static/590185441b10e3a0176bb2bf/t/599f4e967131a550b1edabed/1530126054227/?format=500w',\n    facing: 0,\n  },\n]\n};\n\nexport const deckReducer = (state=initialState, action) => {\n  if(action.type === RESET){\n    return Object.assign({}, state, {\n      login:  null,\n      signIn: null,\n      spreadNumber: 0,\n      readingHistory: null,\n      textQuery: null,\n      cardsDealt: 0,\n    });\n  } else if(action.type === SHUFFLE_DECK){\n    let newDeck = shuffle(state.deck);\n    function direction(){\n      return Math.floor(Math.random() * Math.floor(4));\n    }\n    newDeck.map(card => card.facing = direction());\n    return Object.assign({}, state, {\n      deck: [...newDeck]\n    });\n  } else if(action.type === SET_DECK){\n    let shuffledDeck = shuffle(action.deck);\n    function direction(){\n      return Math.floor(Math.random() * Math.floor(4));\n    }\n    shuffledDeck.map(card => card.facing = direction());\n    return Object.assign({}, state, {\n      deck: [...shuffledDeck]\n    });\n  } else if(action.type === TRIM_DECK){\n    return Object.assign({}, state, {\n      spreadNumber: action.values,\n      cardsDealt: [...state.deck.slice(0, action.values)]\n    });\n  } else if(action.type === TAKE_QUERY){\n    return Object.assign({}, state, {\n      textQuery: action.textQuery\n    });\n  } else if(action.type === MAKE_SEARCH){\n    return Object.assign({}, state, {\n      searchTerm: action.searchTerm\n    });\n  } else if(action.type === TOGGLE_LOGIN){\n    console.log('toggle ran');\n    if(state.login === true){\n      return Object.assign({}, state, {\n        login: false\n      })\n    } else\n    return Object.assign({}, state, {\n      login: true\n    });\n  } else if(action.type === TOGGLE_SIGNIN){\n    console.log('toggle signin ran');\n    if(state.signin){\n      return Object.assign({}, state, {\n        signIn: !state.signIn\n      })\n    } else {\n      return Object.assign({}, state, {\n        signIn: true\n      });\n    }\n  } else if(action.type === OPEN_HISTORY){\n    if (state.readingHistory === true){\n      return Object.assign({}, state, {\n        readingHistory: false,\n      });\n    } else {\n      return Object.assign({}, state, {\n        readingHistory: true,\n      });\n    }\n  };\n  return state;\n};\n","import { \n  SET_AUTH_TOKEN,\n  CLEAR_AUTH,\n  AUTH_REQUEST,\n  AUTH_SUCCESS,\n  AUTH_ERROR,\n  FETCH_HISTORY_ERROR,\n  FETCH_HISTORY_SUCCESS,\n  FETCH_HISTORY_REQUEST,\n} from '../actions/protected.js';\n\nconst initialState = {\n  authToken:  null,\n  cardsDealt: 0,\n  currentUser: null,\n  error: null,\n  loading: false,\n};\n\nexport default function reducer (state = initialState, action){\n  if (action.type === SET_AUTH_TOKEN){\n    return Object.assign({}, state, {\n      authToken: action.authToken,\n    });\n  } else if (action.type === CLEAR_AUTH){\n    return Object.assign({}, state, {\n      authToken: null,\n      currentUser: null,\n    });\n  } else if (action.type === AUTH_REQUEST){\n    return Object.assign({}, state,{\n      loading: true,\n      error: null,\n    });\n  } else if (action.type === AUTH_SUCCESS){\n    return Object.assign({}, state, {\n      loading: false,\n      currentUser: action.currentUser,\n     // history: action.history,\n    });\n  } else if (action.type === AUTH_ERROR){\n    return Object.assign({}, state, {\n      loading: false,\n      error: action.error,\n    });\n  } else if(action.type === FETCH_HISTORY_REQUEST ){\n    return Object.assign({}, state, {\n      loading: true,\n      error: null,\n    });\n  } else if(action.type === FETCH_HISTORY_SUCCESS){\n    return Object.assign({}, state, { \n      loading: false,\n      history: action.history,\n    });\n  } else if(action.type === FETCH_HISTORY_ERROR){\n    return Object.assign({}, state, {\n      loading: false,\n      error: action.error,\n    });\n  }\n return state;\n}\n","import { createStore, combineReducers, compose, applyMiddleware } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport thunk from 'redux-thunk';\nimport { deckReducer } from '../reducers/index.js';\nimport reducer from '../reducers/auth.js';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  form: formReducer,\n  tarot: deckReducer,\n  auth: reducer,\n});\n//check for localStorage.authToken and login\nexport default createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport store from './components/store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n ( <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>), document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}